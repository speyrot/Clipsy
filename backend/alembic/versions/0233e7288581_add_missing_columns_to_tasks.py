"""Add missing columns to tasks

Revision ID: 0233e7288581
Revises: 254978c7573e
Create Date: 2025-01-20 03:37:05.307620+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0233e7288581'
down_revision: Union[str, None] = '254978c7573e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add 'description' column to 'tasks' table as nullable
    op.add_column('tasks', sa.Column('description', sa.Text(), nullable=True))
    
    # Add 'status' column to 'tasks' table as nullable
    op.add_column('tasks', sa.Column('status', sa.Enum('unassigned', 'todo', 'in_progress', 'done', name='taskstatus'), nullable=True))
    
    # Add 'created_at' column to 'tasks' table as nullable with default
    op.add_column('tasks', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    
    # Add 'updated_at' column to 'tasks' table as nullable with default
    op.add_column('tasks', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    
    # Populate 'description' with default value for existing records
    op.execute("UPDATE tasks SET description = 'No description provided.' WHERE description IS NULL")
    
    # Populate 'status' with default value for existing records
    op.execute("UPDATE tasks SET status = 'todo' WHERE status IS NULL")
    
    # Alter 'description' to be non-nullable
    op.alter_column('tasks', 'description',
               existing_type=sa.Text(),
               nullable=False)
    
    # Alter 'status' to be non-nullable
    op.alter_column('tasks', 'status',
               existing_type=postgresql.ENUM('unassigned', 'todo', 'in_progress', 'done', name='taskstatus'),
               nullable=False)
    
    # Alter 'created_at' to be non-nullable
    op.alter_column('tasks', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               nullable=False)
    
    # Alter 'updated_at' to be non-nullable
    op.alter_column('tasks', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               nullable=False)
    
    # ### end Alembic commands ###
    


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop 'updated_at' column from 'tasks' table
    op.drop_column('tasks', 'updated_at')
    
    # Drop 'created_at' column from 'tasks' table
    op.drop_column('tasks', 'created_at')
    
    # Drop 'status' column from 'tasks' table
    op.drop_column('tasks', 'status')
    
    # Drop 'description' column from 'tasks' table
    op.drop_column('tasks', 'description')
    
    # ### end Alembic commands ###
